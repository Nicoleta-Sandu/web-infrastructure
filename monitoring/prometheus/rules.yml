groups:
  - name: system_alerts
    rules:
      - alert: HighCPULoad
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU load (instance {{ $labels.instance }})"
          description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Cached_bytes - node_memory_Buffers_bytes) / node_memory_MemTotal_bytes * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage (instance {{ $labels.instance }})"
          description: "Memory usage is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

      - alert: HighDiskUsage
        expr: (node_filesystem_size_bytes{fstype!~"tmpfs|fuse.lxcfs|squashfs"} - node_filesystem_free_bytes{fstype!~"tmpfs|fuse.lxcfs|squashfs"}) / node_filesystem_size_bytes{fstype!~"tmpfs|fuse.lxcfs|squashfs"} * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High disk usage (instance {{ $labels.instance }})"
          description: "Disk usage is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - name: application_alerts
    rules:
      - alert: APIHighErrorRate
        expr: rate(app_request_count{http_status=~"5.."}[5m]) / rate(app_request_count[5m]) * 100 > 5
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "API high error rate (instance {{ $labels.instance }})"
          description: "API error rate is > 5%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
      
      - alert: APIHighLatency
        expr: histogram_quantile(0.95, sum(rate(app_request_latency_seconds_bucket[5m])) by (le, endpoint)) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "API high latency (endpoint {{ $labels.endpoint }})"
          description: "API 95th percentile latency is > 1s\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - name: database_alerts
    rules:
      - alert: PostgreSQLDown
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL down (instance {{ $labels.instance }})"
          description: "PostgreSQL instance is down\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
  
      - alert: PostgreSQLHighConnections
        expr: sum by (datname) (pg_stat_activity_count) > (pg_settings_max_connections * 0.8)
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL high connections (instance {{ $labels.instance }})"
          description: "PostgreSQL instance has more than 80% connections\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

  - name: recording_rules
    rules:
      - record: job:node_cpu_usage:avg_rate5m
        expr: 100 - avg by (job) (rate(node_cpu_seconds_total{mode="idle"}[5m]) * 100)
      
      - record: job:node_memory_usage:percent
        expr: 100 * (1 - ((node_memory_MemFree_bytes + node_memory_Cached_bytes + node_memory_Buffers_bytes) / node_memory_MemTotal_bytes))
      
      - record: job:node_disk_usage:percent
        expr: 100 * (1 - node_filesystem_free_bytes{fstype!~"tmpfs|fuse.lxcfs|squashfs"} / node_filesystem_size_bytes{fstype!~"tmpfs|fuse.lxcfs|squashfs"})
      
      - record: job:api_request_rate:sum_rate5m
        expr: sum by (endpoint) (rate(app_request_count[5m]))

      - record: job:api_error_rate:percent_rate5m
        expr: sum by (endpoint) (rate(app_request_count{http_status=~"5.."}[5m])) / sum by (endpoint) (rate(app_request_count[5m])) * 100

      - record: job:api_latency:p95_rate5m
        expr: histogram_quantile(0.95, sum(rate(app_request_latency_seconds_bucket[5m])) by (le, endpoint))